Prefix(:=<>)

Ontology(<Ontoplex/PettingZoo>
  
  Declaration(Class(:DecisionProblem))
  Declaration(Class(:ComplexityClass))
  
  Declaration(NamedIndividual(:GraphReachability))
  Declaration(NamedIndividual(:SAT))
  Declaration(NamedIndividual(:2SAT))
  Declaration(NamedIndividual(:Tautology))
  Declaration(NamedIndividual(:TravellingSalesmanProblem))
  Declaration(NamedIndividual(:QBF))
  Declaration(NamedIndividual(:GraphIsomorphism))
  Declaration(NamedIndividual(:GraphNonIsomorphism))
  Declaration(NamedIndividual(:CircuitSAT))
  Declaration(NamedIndividual(:PerfectMatching))
  
  Declaration(NamedIndividual(:P))
  Declaration(NamedIndividual(:NP))
  Declaration(NamedIndividual(:coNP))
  Declaration(NamedIndividual(:PSPACE))
  Declaration(NamedIndividual(:EXP))
  Declaration(NamedIndividual(:AC0))
  Declaration(NamedIndividual(:NC))
  Declaration(NamedIndividual(:L))
  Declaration(NamedIndividual(:Ppoly))
  Declaration(NamedIndividual(:BPP))
  Declaration(NamedIndividual(:MA))
  Declaration(NamedIndividual(:AM))
  Declaration(NamedIndividual(:SZK))
  Declaration(NamedIndividual(:BQP))
  Declaration(NamedIndividual(:PP))
  
  ClassAssertion(:DecisionProblem :GraphReachability)
  ClassAssertion(:DecisionProblem :SAT)
  ClassAssertion(:DecisionProblem :2SAT)
  ClassAssertion(:DecisionProblem :Tautology)
  ClassAssertion(:DecisionProblem :TravellingSalesmanProblem)
  ClassAssertion(:DecisionProblem :QBF)
  ClassAssertion(:DecisionProblem :GraphIsomorphism)
  ClassAssertion(:DecisionProblem :GraphNonIsomorphism)
  ClassAssertion(:DecisionProblem :CircuitSAT)
  ClassAssertion(:DecisionProblem :PerfectMatching)
  
  ClassAssertion(:ComplexityClass :P)
  ClassAssertion(:ComplexityClass :NP)
  ClassAssertion(:ComplexityClass :coNP)
  ClassAssertion(:ComplexityClass :PSPACE)
  ClassAssertion(:ComplexityClass :EXP)
  ClassAssertion(:ComplexityClass :AC0)
  ClassAssertion(:ComplexityClass :NC)
  ClassAssertion(:ComplexityClass :L)
  ClassAssertion(:ComplexityClass :Ppoly)
  ClassAssertion(:ComplexityClass :BPP)
  ClassAssertion(:ComplexityClass :MA)
  ClassAssertion(:ComplexityClass :AM)
  ClassAssertion(:ComplexityClass :SZK)
  ClassAssertion(:ComplexityClass :BQP)
  ClassAssertion(:ComplexityClass :PP)
  
  Declaration(ObjectProperty(:isContainedIn))
  Declaration(ObjectProperty(:isSubClassOf))
  
  ObjectPropertyDomain(:isContainedIn :DecisionProblem)
  ObjectPropertyRange(:isContainedIn :ComplexityClass)

  ObjectPropertyDomain(:isSubClassOf :ComplexityClass)
  ObjectPropertyRange(:isSubClassOf :ComplexityClass)
  
  ObjectPropertyAssertion(:isContainedIn :GraphReachability :P)
  ObjectPropertyAssertion(:isContainedIn :2SAT :P)
  ObjectPropertyAssertion(:isContainedIn :CircuitSAT :NP)
  ObjectPropertyAssertion(:isContainedIn :TravellingSalesmanProblem :NP)
  ObjectPropertyAssertion(:isContainedIn :SAT :NP)
  ObjectPropertyAssertion(:isContainedIn :Tautology :coNP)
  ObjectPropertyAssertion(:isContainedIn :QBF :PSPACE)
  ObjectPropertyAssertion(:isContainedIn :GraphIsomorphism :NP)
  ObjectPropertyAssertion(:isContainedIn :GraphNonIsomorphism :SZK)
  
  ObjectPropertyAssertion(:isSubClassOf :P :NP)
  ObjectPropertyAssertion(:isSubClassOf :P :coNP)
  ObjectPropertyAssertion(:isSubClassOf :NP :PSPACE)
  ObjectPropertyAssertion(:isSubClassOf :PSPACE :EXP)
  ObjectPropertyAssertion(:isSubClassOf :AC0 :P)
  ObjectPropertyAssertion(:isSubClassOf :NC :P)
  ObjectPropertyAssertion(:isSubClassOf :L :P)
  ObjectPropertyAssertion(:isSubClassOf :P :Ppoly)
  ObjectPropertyAssertion(:isSubClassOf :P :BPP)
  ObjectPropertyAssertion(:isSubClassOf :NP :MA)
  ObjectPropertyAssertion(:isSubClassOf :NP :AM)
  ObjectPropertyAssertion(:isSubClassOf :NP :PP)
)
