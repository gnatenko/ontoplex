Prefix(:=<>)

Ontology(<Ontoplex/P>
  
  Declaration(Class(:DecisionProblem))
  Declaration(Class(:ComplexityClass))
  
  Declaration(NamedIndividual(:P))
  Declaration(NamedIndividual(:L))
  Declaration(NamedIndividual(:NL))
  Declaration(NamedIndividual(:NC))
  Declaration(NamedIndividual(:SC))
  Declaration(NamedIndividual(:NP))
  Declaration(NamedIndividual(:BPP))
  Declaration(NamedIndividual(:BQP))
  Declaration(NamedIndividual(:Ppoly))
  Declaration(NamedIndividual(:mP))
  Declaration(NamedIndividual(:P_R))
  Declaration(NamedIndividual(:P_C))
  Declaration(NamedIndividual(:IP))
  Declaration(NamedIndividual(:BPL))
  
  Declaration(NamedIndividual(:LinearProgramming))
  Declaration(NamedIndividual(:MaximumMatching))
  Declaration(NamedIndividual(:PrimalityTesting))
  Declaration(NamedIndividual(:CircuitEvaluation))
  
  ClassAssertion(:ComplexityClass :P)
  ClassAssertion(:ComplexityClass :L)
  ClassAssertion(:ComplexityClass :NL)
  ClassAssertion(:ComplexityClass :NC)
  ClassAssertion(:ComplexityClass :SC)
  ClassAssertion(:ComplexityClass :NP)
  ClassAssertion(:ComplexityClass :BPP)
  ClassAssertion(:ComplexityClass :BQP)
  ClassAssertion(:ComplexityClass :Ppoly)
  ClassAssertion(:ComplexityClass :mP)
  ClassAssertion(:ComplexityClass :P_R)
  ClassAssertion(:ComplexityClass :P_C)
  ClassAssertion(:ComplexityClass :IP)
  ClassAssertion(:ComplexityClass :BPL)
  
  ClassAssertion(:DecisionProblem :LinearProgramming)
  ClassAssertion(:DecisionProblem :MaximumMatching)
  ClassAssertion(:DecisionProblem :PrimalityTesting)
  ClassAssertion(:DecisionProblem :CircuitEvaluation)
  
  Declaration(ObjectProperty(:isContainedIn))
  Declaration(ObjectProperty(:isCompleteFor))
  Declaration(ObjectProperty(:isSubClassOf))
  
  ObjectPropertyDomain(:isContainedIn :DecisionProblem)
  ObjectPropertyRange(:isContainedIn :ComplexityClass)
  
  ObjectPropertyDomain(:isCompleteFor :DecisionProblem)
  ObjectPropertyRange(:isCompleteFor :ComplexityClass)
  
  ObjectPropertyDomain(:isSubClassOf :ComplexityClass)
  ObjectPropertyRange(:isSubClassOf :ComplexityClass)
  
  ObjectPropertyAssertion(:isContainedIn :LinearProgramming :P)
  ObjectPropertyAssertion(:isContainedIn :MaximumMatching :P)
  ObjectPropertyAssertion(:isContainedIn :PrimalityTesting :P)
  ObjectPropertyAssertion(:isContainedIn :CircuitEvaluation :P)
  
  ObjectPropertyAssertion(:isCompleteFor :CircuitEvaluation :P)
  
  ObjectPropertyAssertion(:isSubClassOf :L :P)
  ObjectPropertyAssertion(:isSubClassOf :NL :P)
  ObjectPropertyAssertion(:isSubClassOf :NC :P)
  ObjectPropertyAssertion(:isSubClassOf :SC :P)
  ObjectPropertyAssertion(:isSubClassOf :P :NP)
)
